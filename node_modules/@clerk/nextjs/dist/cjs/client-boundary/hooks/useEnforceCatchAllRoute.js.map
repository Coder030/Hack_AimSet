{"version":3,"sources":["../../../../src/client-boundary/hooks/useEnforceCatchAllRoute.tsx"],"sourcesContent":["import { isProductionEnvironment } from '@clerk/shared';\nimport type { RoutingStrategy } from '@clerk/types';\nimport React from 'react';\n\nimport { usePagesRouter } from './usePagesRouter';\n\n/**\n * This ugly hook  enforces that the Clerk components are mounted in a catch-all route\n * For pages router, we can parse the pathname we get from the useRouter hook\n * For app router, there is no reliable way to do the same check right now, so we\n * fire a request to a path under window.location.href and we check whether the path\n * exists or not\n */\nexport const useEnforceCatchAllRoute = (component: string, path: string, routing?: RoutingStrategy) => {\n  const ref = React.useRef(0);\n  const { pagesRouter } = usePagesRouter();\n\n  // This check does not break the rules of hooks\n  // as the condition will remain the same for the whole app lifecycle\n  if (isProductionEnvironment()) {\n    return;\n  }\n\n  React.useEffect(() => {\n    if (routing && routing !== 'path') {\n      return;\n    }\n\n    const ac = new AbortController();\n    const error = () => {\n      const correctPath = pagesRouter ? `${path}/[[...index]].tsx` : `${path}/[[...rest]]/page.tsx`;\n      throw new Error(\n        `Clerk: The \"${path}\" route is not a catch-all route. It is recommended to convert this route to a catch-all route, eg: \"${correctPath}\". Alternatively, update the ${component} component to use hash-based routing by setting the \"routing\" prop to \"hash\".`,\n      );\n    };\n\n    if (pagesRouter) {\n      if (!pagesRouter.pathname.match(/\\[\\[\\.\\.\\..+]]/)) {\n        error();\n      }\n    } else {\n      const check = async () => {\n        // make sure to run this as soon as possible\n        // but don't run again when strict mode is enabled\n        ref.current++;\n        if (ref.current > 1) {\n          return;\n        }\n        let res;\n        try {\n          const url = `${window.location.origin}${window.location.pathname}/clerk_catchall_check_${Date.now()}`;\n          res = await fetch(url, { signal: ac.signal });\n        } catch (e) {\n          // no op\n        }\n        if (res?.status === 404) {\n          error();\n        }\n      };\n      void check();\n    }\n\n    return () => {\n      // make sure to run this as soon as possible\n      // but don't run again when strict mode is enabled\n      if (ref.current > 1) {\n        ac.abort();\n      }\n    };\n  }, []);\n};\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAAwC;AAExC,mBAAkB;AAElB,4BAA+B;AASxB,MAAM,0BAA0B,CAAC,WAAmB,MAAc,YAA8B;AACrG,QAAM,MAAM,aAAAA,QAAM,OAAO,CAAC;AAC1B,QAAM,EAAE,YAAY,QAAI,sCAAe;AAIvC,UAAI,uCAAwB,GAAG;AAC7B;AAAA,EACF;AAEA,eAAAA,QAAM,UAAU,MAAM;AACpB,QAAI,WAAW,YAAY,QAAQ;AACjC;AAAA,IACF;AAEA,UAAM,KAAK,IAAI,gBAAgB;AAC/B,UAAM,QAAQ,MAAM;AAClB,YAAM,cAAc,cAAc,GAAG,IAAI,sBAAsB,GAAG,IAAI;AACtE,YAAM,IAAI;AAAA,QACR,eAAe,IAAI,wGAAwG,WAAW,gCAAgC,SAAS;AAAA,MACjL;AAAA,IACF;AAEA,QAAI,aAAa;AACf,UAAI,CAAC,YAAY,SAAS,MAAM,gBAAgB,GAAG;AACjD,cAAM;AAAA,MACR;AAAA,IACF,OAAO;AACL,YAAM,QAAQ,YAAY;AAGxB,YAAI;AACJ,YAAI,IAAI,UAAU,GAAG;AACnB;AAAA,QACF;AACA,YAAI;AACJ,YAAI;AACF,gBAAM,MAAM,GAAG,OAAO,SAAS,MAAM,GAAG,OAAO,SAAS,QAAQ,yBAAyB,KAAK,IAAI,CAAC;AACnG,gBAAM,MAAM,MAAM,KAAK,EAAE,QAAQ,GAAG,OAAO,CAAC;AAAA,QAC9C,SAAS,GAAG;AAAA,QAEZ;AACA,aAAI,2BAAK,YAAW,KAAK;AACvB,gBAAM;AAAA,QACR;AAAA,MACF;AACA,WAAK,MAAM;AAAA,IACb;AAEA,WAAO,MAAM;AAGX,UAAI,IAAI,UAAU,GAAG;AACnB,WAAG,MAAM;AAAA,MACX;AAAA,IACF;AAAA,EACF,GAAG,CAAC,CAAC;AACP;","names":["React"]}